app.scriptPreferences.userInteractionLevel = UserInteractionLevels.interactWithAll;//null variableserrorIn = false;var myMellanslagBortScriptFile = new File (app.activeScript.path + '/MellanslagBort.jsx');//select file folder and create list of filesmyRootFolder = "/Kommuni/LaRe/332478_SE/"myFolder= myRootFolder + "translation from/";//Get array with .xml and .indd files in import foldermyTotFiles = Folder(myFolder).getFiles( '*.xml' );//myFiles = Folder(myRootFolder + "2Utflödat/").getFiles( '*.indd' );//myOrgFiles = Folder(myFolder).getFiles('*.icml');//alert (myOrgFiles);//Check if there are files in import folder				if(myTotFiles.length == 0) {	svar = confirm("No files in the import folder. Continue?");	if(svar == false) {exit()}}//~ //Create a new array for languages//~ myLanguages = new Array; //~ //Get all available languages in Indesign CS3//~ for(myCounter = 0; myCounter <app.languagesWithVendors.length; myCounter++){ //~ 	myLanguage = app.languagesWithVendors.item(myCounter); //~ 	myLanguages.push(myLanguage.name);//~ } //~ //Dialog for language selection//~ var myLanguageDialog = app.dialogs.add({name:"Select language",canCancel:true}); //~ with(myLanguageDialog){ //~ 				with(dialogColumns.add()){ //~   				staticTexts.add({staticLabel:"Select language "}); //~      				myLanguageIndex = dropdowns.add({stringList:myLanguages, selectedIndex:0, minWidth:100}); //~   			} //~ } //~ myLanguageDialog.show();//~ 		//~ //Store the selected language//~ myLanguage = app.languagesWithVendors.item(myLanguageIndex.selectedIndex);//~ myLanguageDialog.destroy();for(myFileCounter = 0; myFileCounter < myTotFiles.length; myFileCounter++){	app.scriptPreferences.userInteractionLevel = UserInteractionLevels.neverInteract;	//myIndFile=myFiles[myFileCounter];//~ 	myIndFile = app.open(myIndFile, true);	myTotFile=myTotFiles[myFileCounter];	    myBaseName = myTotFile.name.substr(0,myTotFile.name.length - 16);		myNr = new Number( myTotFile.name.slice(11, 15));    var myFolders = Folder( myRootFolder ).getFiles( '* - Sid*' );    for(myFolderCounter = 0; myFolderCounter <myFolders.length; myFolderCounter++)    {         mySubFolder = myFolders[myFolderCounter];        myFirstArkPos = mySubFolder.name.indexOf("S");        myMiddleArkPos = mySubFolder.name.indexOf("-", myFirstArkPos);        myLowNo = new Number(mySubFolder.name.slice(myFirstArkPos +6, myMiddleArkPos));        myHighNo = new Number(mySubFolder.name.slice(myMiddleArkPos + 1));        if((myNr>=myLowNo)&&(myNr<=myHighNo)) break;    }	myIndFile = app.open(File(mySubFolder + "/2Utflödat/" + myBaseName + ".indd"), true); 	myOrgFile = File(mySubFolder + "/2Utflödat/icml/" + myBaseName + ".indd_1_Part.xml"); //     myOrgFile=myOrgFiles[myFileCounter];     	app.scriptPreferences.userInteractionLevel = UserInteractionLevels.neverInteract;		//Stop if there are no stories in the active document	if (app.activeDocument.stories.length != 0){		var docRef = app.activeDocument; 		var spreadPage = docRef.spreads.firstItem();  		//Create a new array for layers		myLayers = new Array; 		//~ 		//Create a new array for languages//~ 		myLanguages = new Array; 				//Create array to store lock status of layers		myLayersCheck = new Array;		//~ 		//Get all available languages in Indesign CS2//~ 		for(myCounter = 0; myCounter <app.languagesWithVendors.length; myCounter++){ //~ 			myLanguage = app.languagesWithVendors.item(myCounter); //~ 			myLanguages.push(myLanguage.name);//~ 		} 				//Get lock status for all layers		for(myCounter = 0; myCounter <app.activeDocument.layers.length; myCounter++){ 			myLayer = app.activeDocument.layers.item(myCounter); 			myLayers.push(myLayer.name);			myLayersCheck.push(myLayer.locked); 		} 		//~ 		//Dialog for language selection//~ 		var myLanguageDialog = app.dialogs.add({name:"Select language",canCancel:true}); 		 //~ 		with(myLanguageDialog){ //~   				with(dialogColumns.add()){ //~     				staticTexts.add({staticLabel:"Select language "}); //~        				myLanguageIndex = dropdowns.add({stringList:myLanguages, selectedIndex:0, minWidth:100}); //~     			} //~ 		} //~ 		myLanguageDialog.show();				//Store the selected language//~ 		myLanguage = app.languagesWithVendors.item(myLanguageIndex.selectedIndex);//~ 		myLanguageDialog.destroy();		myLanguage = "Swedish";//~ 		//Dialog to select the import file//~ 		myTotFile = File.openDialog ("Select the translated file");//~         myTotFile.open("r", undefined, undefined);//~         myTotFile.encoding = "UTF8";//~         myTotFile.lineFeed="Unix";//~         myTotFile.readln();//~         myOrgFilePath = myTotFile.readln();//~         myOrgFilePath = myOrgFilePath.slice(22, myOrgFilePath.length - 2); //~         myTotFile.close();//~         myOrgFile = File(myOrgFilePath);//~         if(myOrgFile.exists==false){//~             myOrgFile = File.openDialog ("Select the original file");//~         }				//Continue if the selected file contains text and the active document contains stories		if((myTotFile != null)&&(app.activeDocument.stories.length !=0)){						// Calls function to read and place all stories in the active document           			            myReadAllStories(myTotFile, myLanguage, myOrgFile);            }	}else{		alert("The document does not contain any text. Please open a document containing text and try again.");	}	// save and close InD document if there were no errors	if (errorIn==false) {        //reset preview changes from old exports        myIndFile.textPreferences.highlightCustomSpacing=0; //       myIndFile.screenMode = ScreenModeOptions.previewOff; //       myIndFile.overprintPreview = false;		app.doScript(myMellanslagBortScriptFile,ScriptLanguage.JAVASCRIPT);		//app.activeDocument.exportFile("Adobe PDF", File(mySubFolder .fullName+ "/3Inflödat/pdf/" + app.activeDocument.name + ".pdf"), false);        myIndFile.save(File(mySubFolder.fullName + "/3Inflödat/" + app.activeDocument.name))        myIndFile.close();	}	//leave document open if there were errors	if (errorIn==true){		//alert("det blev fel så dokumentet ligger kvar öppet");		//myIndFile.save(myErrorFolder);		errorIn = false;	}	myTotFile.copy(mySubFolder + "/3Inflödat/xml/" + myBaseName + ".xml");	myTotFile.copy(myRootFolder + "translation from/klara/" + myTotFile.name);	myTotFile.remove();	myOrgFile.close();//	myOrgFile.remove();}alert("Import klar");//myReadAllStories function takes care of importing all translated stories to the active document//myTotFile is a reference to the text file containing translated stories//myOrgFile is a reference to the text file containing original stories//myLanguage is the chosen language for the imported storiesfunction myReadAllStories(myTotFile, myLanguage, myOrgFile){ //Redundant?	app.activeDocument.textPreferences.linkTextFilesWhenImporting = false;	XML.ignoreComments = false;    XML.ignoreProcessingInstructions = false;    XML.ignoreWhitespace = false;    XML.prettyPrinting = false;    XML.prettyIndent = 0;    	myTotFile.open("r", undefined, undefined);				//Set the encoding to Unicode	myTotFile.encoding = "UTF8";    myTotFile.lineFeed="Unix";	myTranslatedFileString = myTotFile.read();	myTotFile.close();        myOrgFile.open("r", undefined, undefined);    myOrgFile.encoding = "UTF8";    myOrgFile.lineFeed="Unix";    myOrgFileString = myOrgFile.read();	myOrgFile.close();    //Get path to temporary folder	//myFolder = "~";	myFolder = Folder.myDocuments;	 //remove old temporary files before importing    myTempFiles = Folder(myFolder).getFiles( '*.icml' );//~     alert(Folder(myFolder).getFiles( '*.icml');    for (myTempCounter=0; myTempCounter<myTempFiles.length; myTempCounter++){        myTempFile=myTempFiles[myTempCounter];        File(myTempFile).remove();    }	//Set name for temporary file	myDate = new Date();	myDateHours = myDate.getHours();	if(myDateHours<10){		myHours = myDateHours + "";		myHours = "0" + myHours;	}else{		myHours = myDateHours + "";	}	myDateMinutes = myDate.getMinutes();	if(myDateMinutes<10){		myMinutes = myDateMinutes + "";		myMinutes = "0" + myMinutes;	}else{		myMinutes = myDateMinutes + "";	}		myTime = myHours.concat(myMinutes);	myCurrentFolder = myTotFile.path;	myFilePath = myFolder + "/temp.icml";	myOldFilePath = myFolder + "/tempOld.icml";	myErrorFilePath = myCurrentFolder + "/Error_" + myTime + ".icml";	myErrorOrgFilePath = myCurrentFolder + "/ErrorOrg_" + myTime + ".icml";	myErrorLogPath = myCurrentFolder + "/ErrorLog_" + myTime + ".icml";	myTempPath = myFolder + "/tempChecked.icml";	myTempOrgPath = myFolder + "/tempCheckedOrg.icml";	myErrorOrgFile = new File(myErrorOrgFilePath);	myErrorOrgFile.open("w",undefined, undefined);	myErrorOrgFile.encoding = "UTF8";	myErrorFile = new File(myErrorFilePath);	myErrorFile.open("w",undefined, undefined);	myErrorFile.encoding = "UTF8";	myErrorLog = new File(myErrorLogPath);	myErrorLog.open("w",undefined, undefined);	myErrorLog.encoding = "UTF8";	myErrorCount = 0;	myExtraErrorCount = 0;    myErrorFlag = false;    try    {        myXML = new XML(myTranslatedFileString);    } catch(e) {        //On error, display story ID and error message         alert ("Fel i den översatta xml-filen. Åtgärda och försök igen.\r\r" + e.message);        exit();    }    myOrgXML = new XML(myOrgFileString);    var myMatchArray = new Array();      for(myXMLStoryCounter = myXML.KAB_Story.length()-1; myXMLStoryCounter >=0; myXMLStoryCounter--)    {                myNo = myXML.KAB_Story[myXMLStoryCounter].attribute("ID");        myOrgElement = myOrgXML.xpath("//KAB_Story[@ID='" + myNo + "']");        if(myXML.KAB_Story[myXMLStoryCounter].descendants().length()<=myOrgElement.descendants().length())                 {            myLength = myXML.KAB_Story[myXMLStoryCounter].descendants().length();         }else{             myLength = myOrgElement.descendants().length();         }        for(myRowMatchCounter = 0; myRowMatchCounter <myLength; myRowMatchCounter++)        {             if(myXML.KAB_Story[myXMLStoryCounter].child(myRowMatchCounter).localName()!=myOrgElement.child(myRowMatchCounter).localName())            {                myErrorFlag = true;                myErrorString = "Story No " + myNo + " Child No " + myRowMatchCounter + "\n\tUrsprunglig elementnamn: " + myOrgElement.child(myRowMatchCounter).localName() + "\n\tÖversatt elementnamn: " + myXML.KAB_Story[myXMLStoryCounter].child(myRowMatchCounter).localName() + "\n"                myErrorLog.write(myErrorString);                break;            }        }        if(myErrorFlag)        {            myErrorFile.write(myXML.KAB_Story[myXMLStoryCounter].toString());            delete myXML.KAB_Story[myXMLStoryCounter];            myErrorOrgFile.write(myOrgElement.toString());            myErrorCount++;            myErrorFlag = false;        }                   }    myErrorLog.close();    myErrorFile.close();    myErrorOrgFile.close();    if(!myErrorFlag)    {        myErrorLog.remove();        myErrorFile.remove();        myErrorOrgFile.remove();                }    myTranslatedFileString = myXML.toString();	re2 = /<thinspace \/>/g;	re3 = /<pspace \/>/g;	re4 = /<nbsp_fixwidth \/>/g;	re5 = /<sphyphen \/>/g;	re6 = /<quarterspace \/>/g;	re7 = /<sixthspace \/>/g;	re8 = /<KAB_internTag>/g;	re9 = /<\/KAB_internTag>/g;	re10 = /<u8232\/>/g;	re11 = /<u8232 \/>/g;	re12 = /<linebreak \/>/g;	re13 = /<linebreak\/>/g;//~ 	re13 = /<Cell\/>/g;//~ 	re14 = /<Cell \/>/g;    re15 = /<Content [^>]*>/g;    re16 = /<Content>\s*<KAB_Start\/>/g;    re17 = /<KAB_End\/>\s*<\/Content>/g;    re18 = /<KAB_internTag\/>/g;    re19 = /<uF0A1 \/>/g;    re20 = /<uF0A1\/>/g;    re21 = /<Content [^\/|^>]*\/>/g;    re22 = /<uF0A2 \/>/g;    re23 = /<uF0A2\/>/g;    re24 = /<tab\/>/g;    re25 = /<KAB_internTag><\/KAB_internTag>/g;    re26 = /<KAB_internTag \/>/g;    re27 = /<KAB_Middle\/>/g;    re28 = /<KAB_Middle \/>/g;	myTranslatedFileString = myTranslatedFileString.replace(re2,"\u2009");	myTranslatedFileString = myTranslatedFileString.replace(re3,"\u2008");	myTranslatedFileString = myTranslatedFileString.replace(re4,"\u202F");	myTranslatedFileString = myTranslatedFileString.replace(re5,"\uE02D");	myTranslatedFileString = myTranslatedFileString.replace(re6,"\u8197");	myTranslatedFileString = myTranslatedFileString.replace(re7,"\u8198");	myTranslatedFileString = myTranslatedFileString.replace(re8,"</Content>\n<Content>");	myTranslatedFileString = myTranslatedFileString.replace(re9,"</Content>\n<Content>");	myTranslatedFileString = myTranslatedFileString.replace(re10,"\u2028");	myTranslatedFileString = myTranslatedFileString.replace(re11,"\u2028");	myTranslatedFileString = myTranslatedFileString.replace(re12,"\u2028");	myTranslatedFileString = myTranslatedFileString.replace(re13,"\u2028");	//~ 	myTranslatedFileString = myTranslatedFileString.replace(re13,"</Cell>");	//~ 	myTranslatedFileString = myTranslatedFileString.replace(re14,"</Cell>");	myTranslatedFileString = myTranslatedFileString.replace(re21,"<Content></Content>");	myTranslatedFileString = myTranslatedFileString.replace(re15,"<Content>");	myTranslatedFileString = myTranslatedFileString.replace(re16,"<Content>");	myTranslatedFileString = myTranslatedFileString.replace(re17,"</Content>");	myTranslatedFileString = myTranslatedFileString.replace(re18,"</Content>\n<Content></Content>\n<Content>");	myTranslatedFileString = myTranslatedFileString.replace(re19,"\uF0A1");	myTranslatedFileString = myTranslatedFileString.replace(re20,"\uF0A1");	myTranslatedFileString = myTranslatedFileString.replace(re22,"\uF0A2");	myTranslatedFileString = myTranslatedFileString.replace(re23,"\uF0A2");	myTranslatedFileString = myTranslatedFileString.replace(re24,"\t");	myTranslatedFileString = myTranslatedFileString.replace(re25,"</Content>\n<Content></Content>\n<Content>");	myTranslatedFileString = myTranslatedFileString.replace(re26,"</Content>\n<Content></Content>\n<Content>");	myTranslatedFileString = myTranslatedFileString.replace(re27,"</Content><Content>");	myTranslatedFileString = myTranslatedFileString.replace(re28,"</Content><Content>");    //ERROR CHECK - aktivera om nödvändigt fram till 368//~ myMOLfilePath=myCurrentFolder + "/MOLcheck_" + ".xml";//~ myMOLfile=new File(myMOLfilePath);//~ alert(myMOLfilePath);//~ myMOLfile.encoding = "UTF8";//~ myMOLfile.lineFeed="Unix";//~ myMOLfile.open("w", undefined, undefined);//~ myMOLfile.write(myTranslatedFileString);    myTranslatedXML = new XML(myTranslatedFileString);//~     myExtraErrorFilePath = myCurrentFolder + "/ExtraError_" + myTime + ".icml";//~     myExtraErrorOrgFilePath = myCurrentFolder + "/ExtraErrorOrg_" + myTime + ".icml";//~     myExtraErrorOrgFile = new File(myExtraErrorOrgFilePath);//~     myExtraErrorOrgFile.open("w",undefined, undefined);//~     myExtraErrorOrgFile.encoding = "UTF8";//~     myExtraErrorFile = new File(myExtraErrorFilePath);//~     myExtraErrorFile.open("w",undefined, undefined);//~     myExtraErrorFile.encoding = "UTF8";//~     myExtraErrorCount = 0;    app.scriptPreferences.userInteractionLevel = UserInteractionLevels.neverInteract;	//Repeat until the end of the text file is reached    for(myXMLTranslatedStoryCounter = 0; myXMLTranslatedStoryCounter <myTranslatedXML.KAB_Story.length(); myXMLTranslatedStoryCounter++)    { 		//Create temporary file        myFile = new File(myFilePath);        myFile.encoding = "UTF8";        myFile.lineFeed="Unix";        myOldFile = new File(myOldFilePath);        myOldFile.encoding = "UTF8";        myOldFile.lineFeed="Unix";        myString = myTranslatedXML.KAB_Story[myXMLTranslatedStoryCounter];        myID = myTranslatedXML.KAB_Story[myXMLTranslatedStoryCounter].attribute("ID");//~ 		alert(myID);		//Make the story ID into an integer		myIntID = parseInt(myID);		myStory = docRef.stories.itemByID(myIntID);				myStory.exportFile(ExportFormat.INCOPY_MARKUP, myOldFile);		myStory.itemLink.unlink();					//Open temporary file for writing...		myFile.open("w",undefined, undefined);		//in unicode		myFile.encoding = "UTF8";		//Open temporary file for writing...		myOldFile.open("r",undefined, undefined);		//in unicode		myOldFile.encoding = "UTF8";        myOldFileString = myOldFile.read();        myOldFile.close();        myOldFile.remove();        myOldXML = new XML(myOldFileString);        myTranslatedContentCounter = 0;        for(myOldContentCounter = 0; myOldContentCounter <myOldXML.descendants("Content").length(); myOldContentCounter++)        {            re2 = /^[\d|\-|\.|\s|\/]+$/;            if(!((myOldXML.descendants("Content")[myOldContentCounter].toString().search(re2)==0)||(myOldXML.descendants("Content")[myOldContentCounter].toString()=="")||(myOldXML.descendants("Content")[myOldContentCounter].toString()=="<?ACE 18?>")))            {                myDebug = myOldXML.descendants("Content")[myOldContentCounter].toString();//~ 				alert(myTranslatedXML.KAB_Story[myXMLTranslatedStoryCounter].Content[myTranslatedContentCounter].toString());//~ 				alert(myOldXML.descendants("Content")[myOldContentCounter].toString());                myOldXML.descendants("Content")[myOldContentCounter].setChildren(myTranslatedXML.KAB_Story[myXMLTranslatedStoryCounter].Content[myTranslatedContentCounter].toString());                myTranslatedContentCounter++;            }         }        for(myOldTopicCounter = 0; myOldTopicCounter <myOldXML.descendants("Topic").length(); myOldTopicCounter++)        {             myName = myXML.KAB_Story[myXMLStoryCounter].attribute("ID");             myOldXML.descendants("Topic")[myOldTopicCounter].setChildren(myTranslatedXML.KAB_Story[myXMLTranslatedStoryCounter].Topic[myOldTopicCounter].toString());         }        myFile.writeln("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>");        myFile.write(myOldXML.toXMLString());        myFile.close();        try        {            myStory.texts.item(0).place(myFile, false);            myStory.itemLink.unlink();            myStory.appliedLanguage = "Swedish";        } catch(e) {                //On error, display story ID and error message             alert ("Were unable to place story " + myID + ".\r\r" + e.message);	        }                myFile.close();        myFile.remove();        myOldFile.remove();        }//~         myExtraErrorFile.close();//~         myExtraErrorOrgFile.close();	app.scriptPreferences.userInteractionLevel = UserInteractionLevels.interactWithAll;}